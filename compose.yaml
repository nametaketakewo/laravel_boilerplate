
---

name: ${COMPOSE_PROJECT_NAME:-}

services:

    laravel.test:
        build:
            args:
                APP_ENV: ${APP_ENV:-local}
                NODE_ENV: ${NODE_ENV:-development}
                TZ: ${APP_TIMEZONE:-UTC}
        develop:
            watch:
                - action: rebuild
                  path: ./composer.lock
                - action: rebuild
                  path: ./package-lock.json
        environment:
            APP_URL: ${APP_URL:-http://localhost:${PORT_PREFIX:-0}0080}
            INERTIA_SSR_URL: ${INERTIA_SSR_URL:-http://ssr:13714}
        ports:
            - ${PORT_PREFIX:-0}8000:8000
        volumes:
            - ./:/var/www/html/
            - socket-upstream:/var/run/php/

    web:
        build:
            args:
                APP_ENV: ${APP_ENV:-local}
                NODE_ENV: ${NODE_ENV:-development}
                TZ: ${APP_TIMEZONE:-UTC}
            target: nginx
        depends_on:
            - laravel.test
        develop:
            watch:
                - action: sync+restart
                  path: ./docker/nginx/default.conf
                  target: /etc/nginx/conf.d/default.conf
        ports:
            - ${PORT_PREFIX:-0}0080:80
        volumes:
            - ./public/:/var/www/html/public/:delegated
            - socket-upstream:/var/run/php/

    ssr:
        build:
            args:
                APP_ENV: ${APP_ENV:-local}
                NODE_ENV: ${NODE_ENV:-development}
                TZ: ${APP_TIMEZONE:-UTC}
            target: ssr
        develop:
            watch:
                - action: sync+restart
                  path: ./bootstrap/ssr/
                  target: /var/www/html/bootstrap/ssr/
                - action: rebuild
                  path: ./resources/
                - action: rebuild
                  path: ./package-lock.json

    hmr:
        build:
            args:
                APP_ENV: ${APP_ENV:-local}
                NODE_ENV: ${NODE_ENV:-development}
                TZ: ${APP_TIMEZONE:-UTC}
            target: node
        develop:
            watch:
                - action: rebuild
                  path: ./package-lock.json
        environment:
            PORT_PREFIX: ${PORT_PREFIX:-0}
        ports:
            - ${PORT_PREFIX:-0}5173:5173
        volumes:
            - ./bootstrap/ssr/:/var/www/html/bootstrap/ssr/:cached
            - ./public/:/var/www/html/public/:cached
            - ./postcss.config.ts:/var/www/html/postcss.config.ts:delegated
            - ./tailwind.config.ts:/var/www/html/tailwind.config.ts:delegated
            - ./tsconfig.json:/var/www/html/tsconfig.json:delegated
            - ./vite.config.ts:/var/www/html/vite.config.ts:delegated
            - ./resources/:/var/www/html/resources/:delegated
            - ./package.json:/var/www/html/package.json
            - ./package-lock.json:/var/www/html/package-lock.json

    db:
        environment:
            POSTGRES_DB: ${DB_DATABASE:-postgres}
            POSTGRES_USER: ${DB_USERNAME:-postgres}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
            POSTGRES_HOST_AUTH_METHOD: trust
        image: postgres:16.4
        ports:
            - ${PORT_PREFIX:-0}5432:5432
        volumes:
            - ./docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql:delegated
            - pgdata:/var/lib/postgresql/data/
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE:-postgres}", "-U", "${DB_USERNAME:-postgres}"]
            interval: 60s
            timeout: 5s
            start_period: 30s
            start_interval: 1s
            retries: 1

    minio:
        command: minio server /data/ --console-address ":9001"
        environment:
            MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID:-minio}
            MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY:-password}
        image: minio/minio
        ports:
            - ${PORT_PREFIX:-0}9000:9000
            - ${PORT_PREFIX:-0}9001:9001
        volumes:
            - minio:/data/
        healthcheck:
            test: ["CMD", "mc", "ready", "local"]
            interval: 60s
            timeout: 5s
            start_period: 30s
            start_interval: 1s
            retries: 1

    mailpit:
        image: axllent/mailpit
        ports:
            - ${PORT_PREFIX:-0}1025:1025
            - ${PORT_PREFIX:-0}8025:8025

    selenium:
        image: selenium/standalone-chromium
        volumes:
            - /dev/shm/:/dev/shm/
        healthcheck:
            test: ["CMD", "curl", "-sf", "http://localhost:4444"]
            interval: 60s
            timeout: 5s
            start_period: 30s
            start_interval: 1s
            retries: 1

volumes:
    minio:
    pgdata:
    socket-upstream:
